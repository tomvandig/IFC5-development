openapi: 3.0.0
info:
  title: (title)
  version: 0.0.0
tags: []
paths:
  /ifc/v5a/layers:
    get:
      operationId: LayersApi_list
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LayerResponse'
    post:
      operationId: LayersApi_create
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LayerCreateCommand'
    put:
      operationId: LayersApi_update
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LayerUpdateCommand'
    delete:
      operationId: LayersApi_delete
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LayerDeleteCommand'
  /ifc/v5a/layers/{id}:
    get:
      operationId: LayerApi_get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LayerResponse'
        '404':
          description: The server cannot find the requested resource.
  /ifc/v5a/layers/{id}/push:
    put:
      operationId: LayerApi_push
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
        '404':
          description: The server cannot find the requested resource.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              format: binary
  /ifc/v5a/layers/{id}/revisions:
    get:
      operationId: LayerApi_revisions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LayerRevision'
        '404':
          description: The server cannot find the requested resource.
  /ifc/v5a/layers/{id}/{revision}:
    get:
      operationId: LayerHistory_get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: revision
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LayerRevision'
  /ifc/v5a/layers/{id}/{revision}/ifcx:
    get:
      operationId: LayerHistory_ifcx
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: revision
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: string
                format: binary
        '404':
          description: The server cannot find the requested resource.
  /ifc/v5a/layers/{id}/{revision}/tree/*:
    get:
      operationId: LayerHistory_tree
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: revision
          in: path
          required: true
          schema:
            type: string
        - name: recursive
          in: query
          required: true
          schema:
            type: boolean
          explode: false
        - name: collapse
          in: query
          required: true
          schema:
            type: boolean
          explode: false
        - name: compose
          in: query
          required: true
          schema:
            type: boolean
          explode: false
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IfcxNode'
        '404':
          description: The server cannot find the requested resource.
components:
  schemas:
    FederatedLayerRevision:
      type: object
      required:
        - layerID
        - hash
      properties:
        layerID:
          type: string
        hash:
          type: string
    IfcxNode:
      type: object
      required:
        - identifier
      properties:
        identifier:
          $ref: '#/components/schemas/path'
        children:
          type: object
          additionalProperties:
            type: string
            nullable: true
        inherits:
          type: object
          additionalProperties:
            type: string
            nullable: true
        attributes:
          type: object
          additionalProperties: {}
    LayerCreateCommand:
      type: object
      required:
        - id
        - name
        - federatedLayers
      properties:
        id:
          type: string
        name:
          type: string
        federatedLayers:
          type: array
          items:
            $ref: '#/components/schemas/FederatedLayerRevision'
    LayerDeleteCommand:
      type: object
      required:
        - id
      properties:
        id:
          type: string
    LayerResponse:
      type: object
      required:
        - id
        - name
        - head
        - federatedLayers
      properties:
        id:
          type: string
        name:
          type: string
        head:
          $ref: '#/components/schemas/LayerRevision'
        federatedLayers:
          type: array
          items:
            $ref: '#/components/schemas/FederatedLayerRevision'
    LayerRevision:
      type: object
      required:
        - hash
      properties:
        hash:
          type: string
        origin:
          type: array
          items:
            $ref: '#/components/schemas/FederatedLayerRevision'
    LayerUpdateCommand:
      type: object
      required:
        - id
        - name
        - federatedLayers
      properties:
        id:
          type: string
        name:
          type: string
        federatedLayers:
          type: array
          items:
            $ref: '#/components/schemas/FederatedLayerRevision'
    path:
      type: string
      pattern: </[A-Za-z0-9_/.:]+>
